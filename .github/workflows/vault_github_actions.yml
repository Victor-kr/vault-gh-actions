name: "Vault-Github-Actions"

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  pre-vault:
    name: 1. ÏãúÌÅ¨Î¶ø Ï°∞Ìöå Î∞è TFC Î≥ÄÏàò ÏÑ§Ï†ï
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: 1.1 ÏãúÌÅ¨Î¶ø Ï°∞Ìöå
        id: import
        uses: hashicorp/vault-action@v2.4.0
        with:
          url: http://127.0.0.1:8200
          tlsSkipVerify: true
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            secrets/data/tfvar prefix | prefix ;
            secrets/data/tfvar height | height ;
            secrets/data/tfvar width | width;
            secrets/data/tfvar org | TF_ORGANIZATION;
            secrets/data/tfvar placeholder | placeholder;
            secrets/data/tfvar region | region ;
            terraform/creds/my-user token | TF_API_TOKEN ;
            aws/sts/vault-demo-jsp access_key | AWS_ACCESS_KEY_ID ;
            aws/sts/vault-demo-jsp secret_key | AWS_SECRET_ACCESS_KEY ;
            aws/sts/vault-demo-jsp security_token | AWS_SESSION_TOKEN 

      - name: 1.2 TFC Workspace Î≥ÄÏàò ÏÑ§Ï†ï
        id: set_var
        run: |
         cd /Users/jsp/code/src/tf-helper/tfh/bin/
         ./tfh pushvars -org ${{ env.TF_ORGANIZATION }} -name 'vault-gh-actions' -token ${{ env.TF_API_TOKEN }} -var 'prefix=${{ env.prefix }}' -overwrite prefix
         ./tfh pushvars -org ${{ env.TF_ORGANIZATION }} -name 'vault-gh-actions' -token ${{ env.TF_API_TOKEN }} -var 'height=${{ env.height }}' -overwrite height
         ./tfh pushvars -org ${{ env.TF_ORGANIZATION }} -name 'vault-gh-actions' -token ${{ env.TF_API_TOKEN }} -var 'width=${{ env.width }}' -overwrite width
         ./tfh pushvars -org ${{ env.TF_ORGANIZATION }} -name 'vault-gh-actions' -token ${{ env.TF_API_TOKEN }} -var 'placeholder=${{ env.placeholder }}' -overwrite placeholder
         ./tfh pushvars -org ${{ env.TF_ORGANIZATION }} -name 'vault-gh-actions' -token ${{ env.TF_API_TOKEN }} -var 'region=${{ env.region }}' -overwrite region
         ./tfh pushvars -org ${{ env.TF_ORGANIZATION }} -name 'vault-gh-actions' -token ${{ env.TF_API_TOKEN }} -env-var 'AWS_ACCESS_KEY_ID=${{ env.AWS_ACCESS_KEY_ID }}' -overwrite-env AWS_ACCESS_KEY_ID
         ./tfh pushvars -org ${{ env.TF_ORGANIZATION }} -name 'vault-gh-actions' -token ${{ env.TF_API_TOKEN }} -senv-var 'AWS_SECRET_ACCESS_KEY=${{ env.AWS_SECRET_ACCESS_KEY }}' -overwrite-env AWS_SECRET_ACCESS_KEY
         ./tfh pushvars -org ${{ env.TF_ORGANIZATION }} -name 'vault-gh-actions' -token ${{ env.TF_API_TOKEN }} -senv-var 'AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }}' -overwrite-env AWS_SESSION_TOKEN
          
  terraform: 
    name: 2. EC2 Ïù∏Ïä§ÌÑ¥Ïä§ Î∞∞Ìè¨
    runs-on: self-hosted
    needs: pre-vault
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          # terraform_version: 0.13.0:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
     
      - name: Terraform Format
        id: fmt
        run: terraform fmt 

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        continue-on-error: true

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`${process.env.PLAN}\`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply

  post-vault:
    name: 3. ÏãúÌÅ¨Î¶ø ÌöåÏàò / TFC Î≥ÄÏàò Ï¥àÍ∏∞Ìôî
    runs-on: self-hosted
    needs: terraform
    steps:
      - uses: actions/checkout@v2

      - name: 3.1 ÏãúÌÅ¨Î¶ø Ï°∞Ìöå
        id: reimport
        uses: hashicorp/vault-action@v2.4.0
        with:
          url: http://127.0.0.1:8200
          tlsSkipVerify: true
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            secrets/data/tfvar org | TF_ORGANIZATION;
            terraform/creds/my-user token | TF_API_TOKEN ;
            secrets/data/tfvar sts_prefix | STS_PREFIX 
      
      - name: 3.2 AWS Access key ÌöåÏàò Î∞è TFC ÌôòÍ≤Ω Î≥ÄÏàò Ï¥àÍ∏∞Ìôî
        id: unset_var
        run: |
         cd /Users/jsp/code/src/tf-helper/tfh/bin/
         ./tfh pushvars -org ${{ env.TF_ORGANIZATION }} -name 'vault-gh-actions' -token ${{ env.TF_API_TOKEN }} -var 'prefix=env.prefix' -overwrite prefix
         ./tfh pushvars -org ${{ env.TF_ORGANIZATION }} -name 'vault-gh-actions' -token ${{ env.TF_API_TOKEN }} -var 'height=env.height' -overwrite height
         ./tfh pushvars -org ${{ env.TF_ORGANIZATION }} -name 'vault-gh-actions' -token ${{ env.TF_API_TOKEN }} -var 'width=env.width' -overwrite width
         ./tfh pushvars -org ${{ env.TF_ORGANIZATION }} -name 'vault-gh-actions' -token ${{ env.TF_API_TOKEN }} -var 'placeholder=env.placeholder' -overwrite placeholder
         ./tfh pushvars -org ${{ env.TF_ORGANIZATION }} -name 'vault-gh-actions' -token ${{ env.TF_API_TOKEN }} -var 'region=env.region' -overwrite region
         ./tfh pushvars -org ${{ env.TF_ORGANIZATION }} -name 'vault-gh-actions' -token ${{ env.TF_API_TOKEN }} -env-var 'AWS_ACCESS_KEY_ID=AWS_ACCESS_KEY_ID' -overwrite-env AWS_ACCESS_KEY_ID
         ./tfh pushvars -org ${{ env.TF_ORGANIZATION }} -name 'vault-gh-actions' -token ${{ env.TF_API_TOKEN }} -senv-var 'AWS_SECRET_ACCESS_KEY=AWS_SECRET_ACCESS_KEY' -overwrite-env AWS_SECRET_ACCESS_KEY
         ./tfh pushvars -org ${{ env.TF_ORGANIZATION }} -name 'vault-gh-actions' -token ${{ env.TF_API_TOKEN }} -senv-var 'AWS_SESSION_TOKEN=AWS_SESSION_TOKEN' -overwrite-env AWS_SESSION_TOKEN
         export VAULT_ADDR=http://127.0.0.1:8200
         export VAULT_TOKEN=${{ secrets.VAULT_TOKEN }}
         vault lease revoke -sync -prefix ${{ env.STS_PREFIX }}
         vault lease revoke -sync -prefix terraform/creds/my-user